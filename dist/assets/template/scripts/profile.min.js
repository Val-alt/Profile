"use strict";

var _this = void 0;

var App = {
  options: {},
  init: function init() {
    this.select();
    this.rangeSlider();
  },
  select: function select() {
    $(".select").click(function () {
      $(".select__list").toggle();
      $(".select__title").toggleClass("select__title--open");
      $(document).mouseup(function (e) {
        if (!$(".select").is(e.target) && $(".select").has(e.target).length === 0) {
          $(".select__list").hide();
          $(".select__title").removeClass("select__title--open");
        }
      });
    });
    $(".select__list li").click(function (e) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = $(".select__list li")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var value = _step.value;

          if ($(value).hasClass("active")) {
            if ($(e.target) !== $(value)) {
              $(value).removeClass("active");
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator["return"] != null) {
            _iterator["return"]();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      $(e.target).addClass("active");
      $(document).mouseup(function (e) {
        if (!$(".select").is(e.target) && $(".select").has(e.target).length === 0) {
          $(".select__list").hide();
          $(".select__title").removeClass("select__title--open");
        }
      });
    });
  },
  rangeSlider: function rangeSlider() {
    $(function () {
      $("#slider").slider();
      $("#slider").slider("option", "value", 70);
      var bandColor = $(".range-slider__band-color");
      var selection = $("#slider").slider("value"); // console.log(selection + 10);

      var position = selection + "%";
      var opt = [0, 26, 51, 77];
      bandColor.css("width", position);

      for (var _i = 0, _opt = opt; _i < _opt.length; _i++) {
        var value = _opt[_i];

        if (selection >= value) {
          var elem = $("[data-value=" + value + "]")[0];
          var _iteratorNormalCompletion5 = true;
          var _didIteratorError5 = false;
          var _iteratorError5 = undefined;

          try {
            for (var _iterator5 = $(".range-slider__option p")[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
              var value1 = _step5.value;

              if ($(value1).hasClass("active")) {
                if ($(value) !== $(value1)) {
                  $(value1).removeClass("active");
                }
              }
            }
          } catch (err) {
            _didIteratorError5 = true;
            _iteratorError5 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion5 && _iterator5["return"] != null) {
                _iterator5["return"]();
              }
            } finally {
              if (_didIteratorError5) {
                throw _iteratorError5;
              }
            }
          }

          $(elem).addClass("active");
        }
      }

      $(".ui-slider-handle").mousedown(function () {
        _this.onmousemove = function (e) {
          selection = $("#slider").slider("value");
          position = selection + "%";
          bandColor.css("width", position);
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = opt[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var value = _step2.value;

              if (selection >= value) {
                var elem = $("[data-value=" + value + "]")[0];
                var _iteratorNormalCompletion3 = true;
                var _didIteratorError3 = false;
                var _iteratorError3 = undefined;

                try {
                  for (var _iterator3 = $(".range-slider__option p")[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                    var value1 = _step3.value;

                    if ($(value1).hasClass("active")) {
                      if ($(value) !== $(value1)) {
                        $(value1).removeClass("active");
                      }
                    }
                  }
                } catch (err) {
                  _didIteratorError3 = true;
                  _iteratorError3 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
                      _iterator3["return"]();
                    }
                  } finally {
                    if (_didIteratorError3) {
                      throw _iteratorError3;
                    }
                  }
                }

                $(elem).addClass("active");
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
                _iterator2["return"]();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
        };
      });
      $(".range-slider__option p").click(function (e) {
        var value = $(e.target)[0].dataset.value;

        if (value == 77) {
          value = 100;
        }

        position = value + "%";
        $("#slider").slider("option", "value", value);
        bandColor.css("width", position);
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = $(".range-slider__option p")[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var _value = _step4.value;

            if ($(_value).hasClass("active")) {
              if ($(e.target) !== $(_value)) {
                $(_value).removeClass("active");
              }
            }
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
              _iterator4["return"]();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }

        $(e.target).addClass("active");
      });
    });
  },
  link: function link() {
    // Cache selectors
    var lastId,
        topMenu = $(".nav"),
        topMenuHeight = topMenu.outerHeight() + 15,
        // All list items
    menuItems = topMenu.find("a"),
        // Anchors corresponding to menu items
    scrollItems = menuItems.map(function () {
      var item = $($(this).attr("href"));

      if (item.length) {
        return item;
      }
    }); // Bind click handler to menu items
    // so we can get a fancy scroll animation

    menuItems.click(function (e) {
      var href = $(this).attr("href"),
          offsetTop = href === "#" ? 0 : $(href).offset().top - topMenuHeight + 1;
      $("html, body").stop().animate({
        scrollTop: offsetTop
      }, 400);
      e.preventDefault();
    }); // Bind to scroll

    $(window).scroll(function () {
      // Get container scroll position
      var fromTop = $(this).scrollTop() + topMenuHeight; // Get id of current scroll item

      var cur = scrollItems.map(function () {
        if ($(this).offset().top < fromTop) return this;
      }); // Get the id of the current element

      cur = cur[cur.length - 1];
      var id = cur && cur.length ? cur[0].id : "";

      if (lastId !== id) {
        lastId = id; // Set/remove active class

        menuItems //   .parent()
        .removeClass("active").end().filter("[href='#" + id + "']") //   .parent()
        .addClass("active");
      }
    });
  }
};
$(document).ready(function () {
  App.init();
});